{"version":3,"sources":["homepage.js","App.js","index.js"],"names":["HomePage","datas","Card","Content","Header","textAlign","moment","format","sys","country","name","width","src","weather","icon","main","description","class","temp_min","temp_max","Button","className","href","App","useState","lat","setLat","lon","setLon","data","setData","useEffect","fetchData","a","navigator","geolocation","getCurrentPosition","pos","coords","latitude","longitude","fetch","then","res","json","result","console","log","ReactDOM","render","document","getElementById"],"mappings":"gPAsDeA,EA7CE,SAACC,GAEd,OACA,qCACS,cAACC,EAAA,EAAD,UACG,cAACA,EAAA,EAAKC,QAAN,UACI,eAACD,EAAA,EAAKE,OAAN,CAAaC,UAAU,SAAvB,UACI,8BACG,sCAASC,MAASC,OAAO,MAAzB,UACA,sCAASD,MAASC,OAAO,sBAC5B,8BACKN,EAAMO,IAAIC,QADf,KAC0BR,EAAMS,eAM5C,cAACR,EAAA,EAAD,UACI,eAACA,EAAA,EAAKC,QAAN,CAAcE,UAAU,SAAxB,UACI,qBAAKM,MAAM,MAAMC,IAAG,2CAAsCX,EAAMY,QAAQ,GAAGC,KAAvD,aACpB,+BAAKb,EAAMY,QAAQ,GAAGE,KAAtB,SACA,4BAAId,EAAMY,QAAQ,GAAGG,mBAG7B,cAACd,EAAA,EAAD,UACI,cAACA,EAAA,EAAKC,QAAN,CAAcE,UAAU,SAAxB,SACI,8BACI,mBAAGM,MAAM,OAAOM,MAAM,2BAClBhB,EAAMc,KAAKG,SAAa,OAAU,IACtC,mBAAGD,MAAM,4BACNhB,EAAMc,KAAKI,SAAc,OAAU,WAKlD,cAACC,EAAA,EAAD,CAAQC,UAAU,aAAlB,SACQ,oBAAKC,KAAM,yEAAX,UACI,mBAAGD,UAAU,kBADjB,wBCGLE,MA5Cf,WAGE,IAMA,EAAsBC,mBAAS,IAA/B,mBAAOC,EAAP,KAAYC,EAAZ,KACA,EAAsBF,mBAAS,IAA/B,mBAAOG,EAAP,KAAYC,EAAZ,KACA,EAAwBJ,mBAAS,IAAjC,mBAAOK,EAAP,KAAaC,EAAb,KAoBA,OAlBAC,qBAAU,WACN,IAAMC,EAAS,uCAAG,sBAAAC,EAAA,6DACdC,UAAUC,YAAYC,oBAAoB,SAAAC,GACtCX,EAAOW,EAAIC,OAAOC,UAClBX,EAAOS,EAAIC,OAAOE,cAHR,SAMbC,MAAM,GAAD,OAjBD,2CAiBC,uBAA0BhB,EAA1B,gBAAqCE,EAArC,kBAhBE,qCAiBPe,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACFf,EAAQe,GACRC,QAAQC,IAAIF,MAVF,2CAAH,qDAafb,MACD,CAACP,EAAKE,IAIP,qBAAKN,UAAU,MAAf,SACuB,oBAAbQ,EAAKd,KAEb,cAAC,EAAD,CAAMd,MAAO4B,IAGP,uCCtCZmB,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,U","file":"static/js/main.feafb82f.chunk.js","sourcesContent":["import React from 'react'\r\nimport {\r\n    Card,Button,Label\r\n\r\n} from 'semantic-ui-react'\r\nimport 'semantic-ui-css/semantic.min.css'\r\nimport moment from 'moment'\r\n\r\nimport './css/app.css'\r\nconst HomePage = (datas) =>{\r\n \r\n    return(\r\n    <>      \r\n             <Card>\r\n                <Card.Content>\r\n                    <Card.Header textAlign='center'>\r\n                        <p> \r\n                           <span>  {moment().format(\"LT\")},   </span> \r\n                           <span>  {moment().format(\"Do MMMM YYYY\")}</span> \r\n                    </p><p>\r\n                            {datas.sys.country}, {datas.name} \r\n                            \r\n                        </p>\r\n                    </Card.Header>\r\n                </Card.Content>\r\n            </Card>  \r\n            <Card>\r\n                <Card.Content textAlign='center'>\r\n                    <img width=\"50%\" src={`http://openweathermap.org/img/wn/${datas.weather[0].icon}@2x.png`} />\r\n                    <h3>{datas.weather[0].main}   </h3>\r\n                    <p>{datas.weather[0].description}</p>\r\n                </Card.Content>\r\n            </Card>\r\n            <Card>\r\n                <Card.Content textAlign='center'>\r\n                    <p>\r\n                        <i width='25px' class=\"fas fa-temperature-low\"></i>\r\n                        { ((datas.main.temp_min ) - 273.15) + \"C\" } \r\n                        <i class=\"fas fa-temperature-high\"></i>\r\n                        {((datas.main.temp_max  ) - 273.15) + \"C\" }\r\n                    </p> \r\n                </Card.Content>\r\n            </Card> \r\n\r\n            <Button className=\"sourceCode\" >  \r\n                    <a   href= \"https://github.com/jyotip101/Weather-app-in-js/blob/main/src/script.js\">\r\n                        <i className='fab fa-github' /> source code\r\n                    </a> \r\n            </Button> \r\n            \r\n</>\r\n    )\r\n}\r\n\r\nexport default HomePage","import React, { useEffect, useState} from 'react'\nimport Home from './homepage'\n// import './css/app.css'\nimport Example from './example'\nfunction App() {\n\n  \n  const API_URL = `https://api.openweathermap.org/data/2.5/`\n  const API_KEY = '7c707d67bfaea395afd4f3cf375077ca' \n\n  const ICON_URL = `http://openweathermap.org/img/wn/`\n  //  ${data.weather[0].icon}@2x.pn\n\n  const [lat, setLat] = useState([])\n  const [lon, setLon] = useState([])\n  const [data, setData] = useState([])\n\n  useEffect(() =>{\n      const fetchData = async() => {\n          navigator.geolocation.getCurrentPosition( pos =>{\n              setLat(pos.coords.latitude)\n              setLon(pos.coords.longitude)\n          })\n\n     await fetch(`${API_URL}weather?lat=${lat}&lon=${lon}&appid=${API_KEY}`)\n          .then(res => res.json())\n          .then(result => {\n              setData(result)\n              console.log(result)\n          })\n      }\n      fetchData()\n  }, [lat, lon])\n\n\n  return (\n    <div className=\"App\"> \n    { (typeof data.main != 'undefined') ? (\n          \n      <Home datas={data}/>  \n\n      ) : (\n            <div> </div>\n        ) } \n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom' \nimport App from './App' \n\nReactDOM.render( \n    <App /> ,\n  document.getElementById('root')\n)\n "],"sourceRoot":""}