{"version":3,"sources":["App.js","index.js"],"names":["api","App","useState","query","setQuery","data","setData","className","type","placeholder","onChange","e","target","value","onKeyPress","key","fetch","then","res","json","result","console","log","main","name","sys","country","d","day","getDay","date","getDate","month","getMonth","year","getFullYear","dateBulder","Date","Math","round","temp","weather","ReactDOM","render","document","getElementById"],"mappings":"wKAIMA,EACC,mCADDA,EAEE,2CAiEOC,EA9DH,WAEV,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAwBF,mBAAS,IAAjC,mBAAOG,EAAP,KAAaC,EAAb,KA4BA,OACE,qBAAKC,UAAU,MAAf,SACI,iCACE,qBAAKA,UAAU,aAAf,SACE,uBACEC,KAAK,OACLD,UAAU,SACVE,YAAY,kBACZC,SAAU,SAAAC,GAAC,OAAIP,EAASO,EAAEC,OAAOC,QACjCA,MAAOV,EACPW,WApCG,SAAAH,GACA,UAAVA,EAAEI,KAEHC,MAAM,GAAD,OAAIhB,EAAJ,qBAAyBG,EAAzB,8BAAoDH,IACtDiB,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACJd,EAAQc,GACRhB,EAAS,IACTiB,QAAQC,IAAIF,WA+BU,oBAAbf,EAAKkB,KACd,gCACE,sBAAKhB,UAAU,eAAf,UACE,sBAAKA,UAAU,WAAf,UAA2BF,EAAKmB,KAAhC,KAAwCnB,EAAKoB,IAAIC,WACjD,qBAAKnB,UAAU,OAAf,SA9BO,SAACoB,GAElB,IAGIC,EAHO,CAAC,SAAU,SAAU,UAAW,YAAa,WAAY,SAAU,YAG/DD,EAAEE,UACbC,EAAOH,EAAEI,UACTC,EAJS,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAIxEL,EAAEM,YACjBC,EAAOP,EAAEQ,cAEb,MAAM,GAAN,OAAUP,EAAV,YAAiBE,EAAjB,YAAyBE,EAAzB,YAAkCE,GAoBDE,CAAW,IAAIC,WAGxC,sBAAK9B,UAAU,cAAf,UACE,sBAAKA,UAAU,OAAf,UAAuB+B,KAAKC,MAAMlC,EAAKkB,KAAKiB,MAA5C,YACA,qBAAKjC,UAAU,UAAf,SAA0BF,EAAKoC,QAAQ,GAAGlB,aAGxC,SC7DhBmB,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,U","file":"static/js/main.33a09a84.chunk.js","sourcesContent":["import React, { useState } from 'react';\n  \nimport './css/app.min.css';\n\nconst api = {\n  key: \"7c707d67bfaea395afd4f3cf375077ca\",\n  base: \"https://api.openweathermap.org/data/2.5/\"\n} \n\nconst App = () => {\n\n  const [query, setQuery] = useState('');\n  const [data, setData] = useState({});\n\n  const search = e =>{\n    if(e.key === 'Enter'){\n      \n      fetch(`${api.base}weather?q=${query}&unit=metric&APPID=${api.key}`)\n        .then(res => res.json())\n        .then(result => {\n          setData(result);\n          setQuery(\"\");\n          console.log(result);\n        });\n    }\n  }\n\n  const dateBulder = (d) => {\n  \n    let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n    let months = [\"Jan\", \"Feb\", \"Mar\", \"Ape\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nav\", \"Dec\"];\n\n    let day = days[d.getDay()];\n    let date = d.getDate();\n    let month = months[d.getMonth()];\n    let year = d.getFullYear();\n\n    return `${day} ${date} ${month} ${year}`;\n  }\n\n  return (\n    <div className=\"App\">\n        <main>\n          <div className=\"search-bar\">\n            <input \n              type=\"text\" \n              className=\"search\"\n              placeholder=\"Enter city name\"\n              onChange={e => setQuery(e.target.value)}\n              value={query}\n              onKeyPress={search}\n            />\n          </div>\n          {(typeof data.main != \"undefined\") ? ( \n          <div>\n            <div className=\"location-bar\">\n              <div className=\"location\">{data.name}, {data.sys.country}</div>\n              <div className=\"date\">{dateBulder(new Date())}</div>\n            </div>\n            \n            <div className=\"weather-bar\">\n              <div className=\"temp\">{Math.round(data.main.temp)}&deg;C </div>\n              <div className=\"weather\">{data.weather[0].main}</div>\n            </div>\n          </div>\n            ): ('')}\n        </main>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom' \nimport App from './App' \n\nReactDOM.render( \n    <App /> ,\n  document.getElementById('root')\n)\n "],"sourceRoot":""}